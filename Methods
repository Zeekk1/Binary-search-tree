class Node():
    def __init__(self,key):
        self.key=key
        self.left=None
        self.right=None
        #left to root to right
//delete node function

def inorder(root):
    if root is not None:
        inorder(root.left)
        print(str(root.key)+"->",end='')
        inorder(root.right)

#preorder root left parent
def preorder(root):
    if root is not None:
        print(root.key,end=" ")
        preorder(root.left)
        preorder(root.right)
def postorder(root):
    if root is not None:
        postorder(root.left)
        postorder(root.right)
        print(root.key,end=" ")


def insert(node,key):
    if node is None:
      return Node(key)
    if key < node.key:
        node.left = insert(node.left, key)
    else:
        node.right = insert(node.right, key)

    return node
"""temp=node.key
        node.key=node.right
        node.right=temp
        delete(temp)"""
root = None
root = insert(root, 8)
root = insert(root, 3)
root = insert(root, 1)
root = insert(root, 6)
root = insert(root, 7)
root = insert(root, 10)
root = insert(root, 14)
root = insert(root, 4)

print("Inorder traversal: ", end=' ')
inorder(root)
print("\n")
print("Pre-order traversal:",end="")
preorder(root)
print("\n")
print("Post-order traversal:",end="")
postorder(root)
